go-mode-1.6.0 (2019/09/19)

* Various indentation fixes to match gofmt style.

* Update default for `go-packages-function` to use
  `go-packages-go-list`.

* Add option to use a single buffer for `godoc'.

* Fix `fill-paragraph' for comment blocks.

* Update default for `godoc-and-godef-command' to use `go doc'.

* Fix go-remove-unused-imports for the Go tool >= 1.9.

* Fix filename handling in `godoc-godetdoc'.

* Add confirmation prompt for Playground uploads.

* Support remote files in `gofmt'.

* Fix gofmt to not move the cursor if the current line changed.

* Fix off by one error in godef--call.

go-mode-1.5.0 (2017/03/09)

* Add locations in `godef-jump' to xref marker stack if available.

* Better support `subword-mode'.

* Remove support for Emacs 23.

* Remove support for XEmacs.

* Update gofmt flags to better support goimports.

go-mode-1.4.0 (2016/05/12)

 * Fix minor bugs in fontification.

 * Use unwind-protect in gofmt, ensuring that temporary files will be
   removed in all cases.

 * Improve go-remove-unused-imports: don't fail to remove unused
   imports because of compilation errors in other files.

 * Add new commands for jumping to various parts of function
   declarations:

    - go-goto-arguments (C-c C-f a)
    - go-goto-docstring (C-c C-f d)
    - go-goto-function (C-c C-f f)
    - go-goto-function-name (C-c C-f n)
    - go-goto-return-values (C-c C-f r)
    - go-goto-method-receiver (C-c C-f m)

   Thanks to Lowe Thiderman for contributing these commands.

 * Add new customizable variable go-packages-function, which allows
   choosing between different ways of finding installed packages.
   Currently, go-packages-native (the default) and go-packages-go-list
   are provided.

 * Automatically detect if goimports is used instead of gofmt and pass
   the -srcdir flag, enabling support for vendoring.

 * Add new customizable variable gofmt-args, a list of strings that
   will be passed to gofmt as additional arguments. Primarily this
   allows using the -s flag with gofmt.

 * Add detection of GOPATH, Godep, wgo and gb. A new non-interactive
   function go-guess-gopath will try a list of functions (the
   customizable variable go-guess-gopath-functions) to detect a
   suitable value for GOPATH. A new interactive command go-set-project
   uses the result of go-guess-gopath to actually set GOPATH. This
   interactive function could be used from inside a
   projectile-switch-project-hook, directory variables or some other
   way of invoking per-project code.

 * Add new command go-reset-gopath, which resets GOPATH to the value
   it had when Emacs started.

 * Add customizable variable godoc-command, which allows choosing
   between using godoc and go doc, and generally specifying
   alternative paths to those tools.

   It defaults to go doc, which differs from prior versions which always
   used godoc.

 * Add customizable variable godoc-use-completing-read, which allows
   turning on or off the completion of import paths in the godoc
   command. This is only really useful when using godoc instead of go
   doc, and thus defaults to off.

 * Fix parsing of test output in compilation-mode for new versions of
   Emacs. It's probably broken in older versions now.

 * Add support for electric-indent-mode and only reindent for closing
   parens, not colons, commas or equal signs.

 * Avoid warnings by the byte compiler -- Use cl-lib instead of cl,
   and utilize a macro to conditionally compile fallback code.

 * Use null-device instead of /dev/null to work better on Windows.

 * Add new customizable variable godoc-at-point-function, which allows
   choosing between strategies for finding an identifier's
   documentation.

 * Add new function godoc-and-godef, which is the default function
   used for godoc-at-point and matches the previous behaviour.

 * Add new customizable variable godoc-and-godef-command, which allows
   specifying the path to the godoc binary.

 * Add the function godoc-gogetdoc, which provides godoc-at-point
   functionality by using the third party tool gogetdoc.

 * The godoc command no longer defaults to the symbol under point. It
   rarely defaulted to a useful value. If you're interested in
   documentation for the identifier at point, use godoc-at-point
   instead.

 * Set compilation-error-screen-columns to nil in go-mode buffers. Go
   uses tabs for indentation, and go/parser-based tools emit column
   numbers in terms of characters, where a tab is one character wide.
   Emacs defaults to interpreting columns as screen columns, where a
   tab is tab-width columns wide. This breaks jumping to the right
   columns from compilation-mode

 * Use HTTPS when talking to the Go Playground. Not only is it safer,
   it is required nowadays.

go-mode-1.3.1 (2015-07-03)

 * The 1.3.0 release forgot to update the version in the package
   metadata. This version fixes that.

go-mode-1.3.0 (2015-05-03)

 * Add a new minor mode godoc-mode, used instead of view-mode when
   displaying godoc output.

go-mode-1.2.1 (2015-04-10)

  * After using godef-jump, don't temporarily mark old buffer as
    active.

go-mode-1.2.0 (2015/03/22):

 * Add a menu for go-mode.

 * Add a new variable go-play-browsw-function that controls the
   behaviour of go-play-region and go-play-buffer.

 * Fix minor bug in fontification.

 * Fix minor bug in go-remove-unused-imports that sometimes prevented
   it from removing unused imports.

go-mode-1.1.0 (2015-02-25):

 * Add a new variable godef-command, allowing customization of the
   godef command.

 * Automatically hide the gofmt error window after fixing errors.

go-mode-1.0.0 (2014-11-28):

 * First release since go-mode was removed from the Go distribution.
